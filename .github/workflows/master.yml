---
name: Master Workflow
on:
  push:
    branches:
      - master
jobs:
  unit-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pipenv'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: pipenv install
        working-directory: ./backend/
      - name: Start database
        run: docker compose up -d database
      - name: Wait for DB to get ready
        # TODO: Instead of blind sleep, check DB health.
        run: sleep 2
      - name: Run unit tests
        working-directory: ./backend/
        run: pipenv run python -W error::RuntimeWarning ./manage.py test
  check-migrations:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pipenv'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: pipenv install
        working-directory: ./backend/
      - run: pipenv run python ./manage.py makemigrations --dry-run --check
        working-directory: ./backend/
  build-backend-image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - run: echo "VAYAR_VERSION=master-${GITHUB_SHA:0:7}" >> $GITHUB_ENV
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_REGISTRY_TOKEN }} | docker login -u ${{ vars.DOCKER_REGISTRY_USER }} --password-stdin ${{ vars.DOCKER_REGISTRY_HOST }}
      - run: docker compose build backend
      - run: docker compose push backend
  acceptance-tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      max-parallel: 1 # Due to the shared test clients and bot token between tests
      matrix:
        test_speed:
          - 'None'
          # - '"slow"' # Commented to free 1-minute CI placeholder. Uncomment when any slow test existed!
    needs:
      - build-backend-image
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pipenv'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: pipenv install --dev
        working-directory: ./acceptance-tests/telegrambot/
      - name: Make Pipenv also accessible inside tests
        run: sudo cp `which pipenv` /usr/bin/pipenv
      - name: Create .env
        working-directory: ./acceptance-tests/telegrambot/
        run: |
          echo "
          VAYAR_TELEGRAM_BOT_TOKEN=${{ secrets.ACCEPTANCE_TEST_BOT_TOKEN }}
          CRUSHBACK_TELEGRAM_BOT_USERNAME=${{ vars.ACCEPTANCE_TEST_BOT_USERNAME }}
          CRUSHBACK_TELEGRAM_CLIENT1_USERNAME=${{ vars.ACCEPTANCE_TEST_CLIENT1_USERNAME }}
          CRUSHBACK_TELEGRAM_CLIENT1_API_ID=${{ secrets.ACCEPTANCE_TEST_CLIENT1_API_ID }}
          CRUSHBACK_TELEGRAM_CLIENT1_API_HASH=${{ secrets.ACCEPTANCE_TEST_CLIENT1_API_HASH }}
          CRUSHBACK_TELEGRAM_CLIENT1_SESSION_STRING=${{ secrets.ACCEPTANCE_TEST_CLIENT1_SESSION_STRING }}
          CRUSHBACK_TELEGRAM_CLIENT2_USERNAME=${{ vars.ACCEPTANCE_TEST_CLIENT2_USERNAME }}
          CRUSHBACK_TELEGRAM_CLIENT2_API_ID=${{ secrets.ACCEPTANCE_TEST_CLIENT2_API_ID }}
          CRUSHBACK_TELEGRAM_CLIENT2_API_HASH=${{ secrets.ACCEPTANCE_TEST_CLIENT2_API_HASH }}
          CRUSHBACK_TELEGRAM_CLIENT2_SESSION_STRING=${{ secrets.ACCEPTANCE_TEST_CLIENT2_SESSION_STRING }}
          " > .env
      - name: Login to docker registry
        run: echo ${{secrets.DOCKER_AUTH_CONFIG}} > ~/.docker/config.json
      - name: Pull backend image
        run: >
          VAYAR_VERSION=${GITHUB_SHA:0:7}
          VAYAR_TELEGRAM_BOT_TOKEN=${{ secrets.ACCEPTANCE_TEST_BOT_TOKEN }}
          docker compose pull backend
      - name: Run acceptance tests
        working-directory: ./acceptance-tests/telegrambot/
        run: >
          VAYAR_VERSION=${GITHUB_SHA:0:7}
          VAYAR_TELEGRAM_BOT_TOKEN=${{ secrets.ACCEPTANCE_TEST_BOT_TOKEN }}
          python ./main.py -E 'speed == ${{ matrix.test_speed }}'
  deploy:
    runs-on: ubuntu-20.04
    needs:
      - build-backend-image
      - unit-tests
      - check-migrations
      - acceptance-tests
    container: hamravesh/darkube-cli:v1.1
    steps:
      - name: darkube-cli deploy
        run: darkube deploy --token ${{secrets.DEPLOY_TOKEN_VAYAR_EMRANBM_VAYAR_HAMRAVESH_C14}}
          --app-id ${{secrets.APP_ID_VAYAR_EMRANBM_VAYAR_HAMRAVESH_C14}} --image-tag
          master-${GITHUB_SHA:0:7} --job-id ${GITHUB_RUN_ID}